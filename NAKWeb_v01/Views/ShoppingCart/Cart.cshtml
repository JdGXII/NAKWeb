@model  AKAWeb_v01.Models.CartViewModel

@{
    ViewBag.Title = "Cart";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Head{
<script src="https://www.paypalobjects.com/api/checkout.js"></script>
<script src="https://code.jquery.com/jquery-3.2.1.min.js"
        integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="
        crossorigin="anonymous"></script>


    }

<h2>Cart</h2>


@if (Session["userid"] != null)
{

    <table class="table">
        <tr>
            <th>
                Product Name
            </th>
            <th>
                Cost
            </th>

            <th></th>
        </tr>

        @foreach (var item in Model.cart)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.product_description) 
                </td>
                <td>
                    $@Html.DisplayFor(modelItem => item.product_cost) 
                </td>
                <td>
                    
                    @Html.ActionLink("Remove from cart", "RemoveFromCart", new { id = item.id }, null)
                </td>


            </tr>
        }

    </table>
    <div class="row"><div class="col-md-3" style="float:right"><b>Total: $ @Model.total</b></div></div>

    <div class="row">
        <div class="col-md-3" style="float:right">
            <div id="paypal-button-container">

            </div>
        </div>
        
    </div>

    <script>
        paypal.Button.render({

            env: 'production', // sandbox | production

            // PayPal Client IDs - replace with your own
            // Create a PayPal app: https://developer.paypal.com/developer/applications/create
            client: {
                sandbox: 'AZDxjDScFpQtjWTOUtWKbyN_bDt4OgqaF4eYXlewfBP4-8aqX3PiV8e1GWU6liB2CUXlkA59kJXE7M6R',
                production: 'AejbNpzQuDve6vqTwrwLXWUGA2ad_ASeBi3v75JPXaWgyJxI9VZdkjjvb2ORfsTRUfK7Dn7OQ39LlyPj'
            },

            // Show the buyer a 'Pay Now' button in the checkout flow
            commit: true,

            // payment() is called when the button is clicked
            payment: function (data, actions) {

                // Make a call to the REST api to create the payment
                return actions.payment.create({
                    payment: {
                        transactions: [
                            {
                                amount: { total: '@Model.total', currency: 'USD' }
                        }
                    ]
                }
            });
        },

        // onAuthorize() is called when the buyer approves the payment
        onAuthorize: function (data, actions) {

            // Make a call to the REST api to execute the payment
            return actions.payment.execute().then(function () {

                
                var url = "/ShoppingCart/Purchase";
                $.post(url, { }, function (data) {
                    window.alert(data);
                    window.location.reload()
                });
            });


        }

    }, '#paypal-button-container');

    </script>


}
else
{
    <p>Please @Html.ActionLink("Sign In", "Index", "Backend") to view the contents of your shopping cart.</p>
}



